@model DCDGear.Models.Banner
@{
    ViewBag.Title = "ImageUpload";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<main>
    <div class="container-fluid px-4">
        <h1 class="mt-4">PRODUCT</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a hre f="admin">Home</a></li>
            <li class="breadcrumb-item active">@Model</li>
        </ol>
        <div class="card mb-4">
        </div>
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>
                DataTable Example
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Create", "Banner", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Product</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "title", onkeyup = "ChangeToSlug();" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Type, new { @class = "form-control", @id = "title", onkeyup = "ChangeToSlug();" })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(model => model.Status)
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="sr-only" for="description">Name:</label>
                            <input type="file" name="file" multiple><br><br>
                            @*@if (TempData["Images"] != null)
                                {
                                    string strImages = TempData["Images"].ToString();
                                    string[] imgs = strImages.Split(',');
                                    foreach (var imgName in imgs)
                                    {
                                        <a href="~/Images/@imgName" download>
                                            <img src="~/Images/@imgName" style="max-width:100px;max-height:100px" />
                                        </a>
                                    }
                                }*@
                        </div>

                    </div>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                }

            </div>
        </div>
    </div>
</main>

